{"file":"select-input.js","mappings":"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","names":[],"sources":["src/commons/wab-input.css?tag=wab-select-input&encapsulation=shadow","src/components/form-controls/select-input/select-input.css?tag=wab-select-input&encapsulation=shadow","src/components/form-controls/select-input/select-input.tsx"],"sourcesContent":[":host {\n    display: block;\n    font-size: 1em;\n    \n    * {\n        box-sizing: border-box;\n    }\n    \n    [part=\"label\"] {\n        display: block;\n    }\n    \n    [part=\"input\"] {\n        width: 100%;\n        font-size: inherit;\n    }\n    \n    [part=\"details\"] {\n        font-size: .75rem;\n    }\n    \n    [part=\"errors\"] {\n        font-size: .75rem;\n        color: red;\n    }\n    \n}\n",":host {\n  --dropdown-border-color: #8f8f9d;\n  --dropdown-border-width: 1px;\n  --dropdown-focus-border-color: #5bb5f5;\n  \n  --dropdown-bg: white;\n  --dropdown-padding: .2rem 0;\n  \n  --dropdown-placeholder-color: #8f8f9d;\n  \n  --dropdown-item-padding: .3rem .5rem;\n  \n  /* hover */\n  --dropdown-item-hover-bg: #eee;\n  --dropdown-item-hover-color: inherit;\n  \n  /* hover & selected */\n  --dropdown-item-hover-selected-bg: #51a2db;\n  --dropdown-item-hover-selected-color: #fff;\n  \n  /* active */\n  --dropdown-item-active-bg: #d0d0d0;\n  --dropdown-item-active-color: inherit;\n  \n  /* selected */\n  --dropdown-item-selected-bg: #5bb5f5;\n  --dropdown-item-selected-color: #fff;\n  \n  [part=\"input-wrapper\"] {\n    position: relative;\n    border: var(--dropdown-border-width) solid var(--dropdown-border-color);\n    \n    &.focus {\n      border-color: var(--dropdown-focus-border-color);\n    }\n  }\n  \n  [part=\"input\"] {\n    position: relative;\n    border: none;\n    background-color: transparent;\n    \n    &.placeholder {\n      color: var(--dropdown-placeholder-color);\n    }\n    \n    &:focus {\n      outline: none;\n    }\n  }\n  \n  [part=\"dropdown\"] {\n    list-style: none;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 100%;\n    min-width: 100%;\n    background-color: var(--dropdown-bg);\n    border: var(--dropdown-border-width) solid var(--dropdown-border-color);\n    padding: var(--dropdown-padding);\n    display: none;\n    \n    &.dropdown-open {\n      display: block;\n      animation: open .2s ease-in-out forwards;\n    }\n    \n    &.dropdown-close {\n      display: block;\n      animation: close .2s ease-in-out forwards;\n    }\n  }\n  \n  [part=\"dropdown-item\"] {\n    padding: var(--dropdown-item-padding);\n    cursor: pointer;\n    font-size: 1em;\n    transition: background-color .2s ease-in-out, color .2s ease-in-out;\n    \n    &.selected {\n      background-color: var(--dropdown-item-selected-bg);\n      color: var(--dropdown-item-selected-color);\n      \n      &.hover, &:hover {\n        background-color: var(--dropdown-item-hover-selected-bg);\n        color: var(--dropdown-item-hover-selected-color);\n      }\n    }\n    \n    &:not(.selected) {\n      &.hover, &:hover {\n        background-color: var(--dropdown-item-hover-bg);\n        color: var(--dropdown-item-hover-color);\n      }\n      \n      &:active {\n        background-color: var(--dropdown-item-active-bg);\n        color: var(--dropdown-item-active-color);\n      }\n    }\n  }\n}\n\n@keyframes open {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  10% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  90% {\n    transform: translateY(0);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes close {\n  0% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n}\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core'\nimport FormComponentInterface from '../../../interfaces/FormComponentInterface'\nimport { getComponentId } from '../../../utils/utils'\n\nexport interface SelectOption {\n  label: string\n  value: string\n}\n\n@Component({\n  tag: 'wab-select-input',\n  styleUrls: ['../../../commons/wab-input.css', 'select-input.css'],\n  shadow: true,\n})\nexport class SelectInput implements FormComponentInterface {\n  /**\n   * The input value\n   * if multiple is true, value is a string separated by commas\n   * @type {string}\n   */\n  @Prop({ mutable: true }) value: any\n  @Prop() placeholder: string\n  @Prop() disabled: boolean = false\n  @Prop() readonly: boolean = false\n  @Prop() name!: string\n  @Prop() label: string\n  @Prop() details: string\n  @Prop() errors: string\n  @Prop() options: { label: string, value: string }[]\n  @Prop() multiple: boolean = false\n  @Prop({ mutable: true }) initialValue\n  \n  @Event() valueChange: EventEmitter<string | string[]>\n  @Event() valueInput: EventEmitter<string | string[]>\n  \n  @State() selectedOptions: SelectOption[] = []\n  @State() inputValue: string\n  @State() hoverOption: SelectOption\n  @State() isDropdownOpen: boolean = false\n  @State() dropdownEl: HTMLElement\n  \n  get id () {\n    return getComponentId(this.name)\n  }\n  \n  componentWillLoad (): Promise<void> | void {\n    this.initialValue = this.initialValue ?? this.value\n    this.onValueChanged(this.value)\n  }\n  \n  componentDidLoad () {\n    this.dropdownEl.addEventListener('animationend', () => {\n      this.dropdownEl.classList.toggle('dropdown-close', false)\n    })\n  }\n  \n  /**\n   * When the value changes, update the selectedOptions and the input value\n   * @param newValue\n   */\n  @Watch('value')\n  onValueChanged (newValue: string | string[]) {\n    console.log('onValueChanged', newValue)\n    // Because the value can be a string separated by commas, we need to split it\n    if (this.multiple) {\n      this.selectedOptions = this.options.filter(option => {\n        if (newValue instanceof Array) {\n          return newValue.includes(option.value)\n        } else {\n          return newValue.split(',').includes(option.value)\n        }\n      })\n    } else {\n      this.selectedOptions = this.options.filter(option => option.value === newValue)\n    }\n    \n    this.updateInputValue()\n  }\n  \n  onOptionSelect (option: SelectOption) {\n    if (!option) return\n    \n    if (!this.multiple) {\n      this.selectedOptions = [option]\n      \n      this.closeDropdown()\n    } else {\n      const alreadySelected = this.selectedOptions?.find(o => o.value === option.value)\n      \n      if (alreadySelected) {\n        this.selectedOptions = this.selectedOptions.filter(o => o.value !== option.value)\n      } else {\n        this.selectedOptions = [...this.selectedOptions, option]\n      }\n    }\n    \n    this.updateInputValue()\n    this.emitValueChange()\n  }\n  \n  onKeyUp (e: KeyboardEvent) {\n    const lastSelectedOption = this.selectedOptions[this.selectedOptions.length - 1]\n    const currentIndex = this.options.findIndex(option => option.value === (this.hoverOption?.value ?? lastSelectedOption?.value))\n    let nextOptionIndex: number\n    \n    if (!this.isDropdownOpen) return\n    console.log(e)\n    switch (e.code) {\n      case 'ArrowDown':\n        nextOptionIndex = currentIndex + 1\n        break\n      case 'ArrowUp':\n        nextOptionIndex = currentIndex - 1\n        break\n      case 'Enter':\n      case 'Space':\n        this.onOptionSelect(this.hoverOption)\n        return\n      default:\n        return\n    }\n    \n    if (nextOptionIndex < 0) nextOptionIndex = this.options.length - 1\n    if (nextOptionIndex >= this.options.length) nextOptionIndex = 0\n    \n    this.hoverOption = this.options[nextOptionIndex]\n  }\n  \n  toggleFocus (e, isFocused: boolean) {\n    e.preventDefault()\n    \n    console.log(e)\n    console.log('toggleFocus', isFocused)\n    \n    // gestire animazione tramite js aspettando che questa sia completa\n    this.isDropdownOpen = isFocused\n    \n    this.dropdownEl.classList.toggle('dropdown-open', this.isDropdownOpen)\n    this.dropdownEl.classList.toggle('dropdown-close', !this.isDropdownOpen)\n    \n    if (this.isDropdownOpen) {\n      this.dropdownEl.focus()\n    }\n  }\n  \n  /**\n   * Update the internal input value based on the selected options\n   */\n  updateInputValue () {\n    if (this.selectedOptions.length === 0) {\n      this.inputValue = null\n      \n    } else if (this.selectedOptions.length === 1) {\n      this.inputValue = this.selectedOptions[0].label\n      \n    } else {\n      this.inputValue = this.selectedOptions.map(option => option.label).join(', ')\n      \n    }\n  }\n  \n  /**\n   * Emit the valueChange event\n   * and update the \"value\" property\n   */\n  emitValueChange () {\n    const toEmit = this.multiple\n      ? this.selectedOptions.map(o => o.value)\n      : this.selectedOptions.map(option => option.value).join(',')\n    \n    this.value = toEmit\n    this.valueInput.emit(toEmit)\n    this.valueChange.emit(toEmit)\n  }\n  \n  closeDropdown () {\n    this.isDropdownOpen = false\n    this.hoverOption = null\n  }\n  \n  \n  \n  render() {\n    return (\n      <Host class=\"wab-form-control\">\n        <slot name=\"label\">\n          {this.label && (\n            <label part=\"label\" htmlFor={this.id}>\n              {this.label}\n            </label>\n          )}\n        </slot>\n        \n        <div part=\"input-wrapper\" id={this.id} tabindex=\"0\"\n             onFocusin={(e) => this.toggleFocus(e, true)}\n             onFocusout={(e) => this.toggleFocus(e, false)}\n             onKeyUp={e => this.onKeyUp(e)}\n             class={{ 'focus': this.isDropdownOpen }}\n        >\n          <div part=\"input\"\n               onFocusin={e => e.stopPropagation()}\n               onFocusout={e => e.stopPropagation()}\n               class={{ 'placeholder': !this.inputValue }}\n          >{this.inputValue ?? this.placeholder ?? '\\xa0'}</div>\n          \n          <ul part=\"dropdown\" ref={(e) => this.dropdownEl = e}>\n            {this.options?.map(option => (\n              <li part=\"dropdown-item\"\n                  key={option.value}\n                  data-value={option.value}\n                  onClick={() => this.onOptionSelect(option)}\n                  class={{\n                    'selected': !!this.selectedOptions?.find(o => o.value === option.value),\n                    'hover': this.hoverOption?.value === option.value\n                  }}\n              >\n                {option.label}\n              </li>\n            ))}\n          </ul>\n        </div>\n        \n        <slot name=\"details\">{this.details && <div part=\"details\">{this.details}</div>}</slot>\n        \n        <slot name=\"errors\">{this.errors && <div part=\"errors\">{this.errors}</div>}</slot>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}