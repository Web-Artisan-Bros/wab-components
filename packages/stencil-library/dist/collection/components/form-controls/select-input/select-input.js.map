{"version":3,"file":"select-input.js","sourceRoot":"","sources":["../../../../src/components/form-controls/select-input/select-input.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAgB,KAAK,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AAE3F,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAA;AAYrD,MAAM,OAAO,WAAW;;;;wBAQM,KAAK;wBACL,KAAK;;;;;;wBAML,KAAK;;+BAMU,EAAE;;;8BAGV,KAAK;;;IAGxC,IAAI,EAAE;QACJ,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAClC,CAAC;IAED,iBAAiB;;QACf,IAAI,CAAC,YAAY,GAAG,MAAA,IAAI,CAAC,YAAY,mCAAI,IAAI,CAAC,KAAK,CAAA;QACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACjC,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,cAAc,EAAE,GAAG,EAAE;YACpD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAA;QAC3D,CAAC,CAAC,CAAA;IACJ,CAAC;IAED;;;OAGG;IAEH,cAAc,CAAE,QAA2B;QACzC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAA;QACvC,6EAA6E;QAC7E,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;gBAClD,IAAI,QAAQ,YAAY,KAAK,EAAE;oBAC7B,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;iBACvC;qBAAM;oBACL,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;iBAClD;YACH,CAAC,CAAC,CAAA;SACH;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAA;SAChF;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAA;IACzB,CAAC;IAED,cAAc,CAAE,MAAoB;;QAClC,IAAI,CAAC,MAAM;YAAE,OAAM;QAEnB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,eAAe,GAAG,CAAC,MAAM,CAAC,CAAA;YAE/B,IAAI,CAAC,aAAa,EAAE,CAAA;SACrB;aAAM;YACL,MAAM,eAAe,GAAG,MAAA,IAAI,CAAC,eAAe,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAA;YAEjF,IAAI,eAAe,EAAE;gBACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAA;aAClF;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;aACzD;SACF;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAA;QACvB,IAAI,CAAC,eAAe,EAAE,CAAA;IACxB,CAAC;IAED,OAAO,CAAE,CAAgB;QACvB,MAAM,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QAChF,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,eAAC,OAAA,MAAM,CAAC,KAAK,KAAK,CAAC,MAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,KAAK,mCAAI,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,KAAK,CAAC,CAAA,EAAA,CAAC,CAAA;QAC9H,IAAI,eAAuB,CAAA;QAE3B,IAAI,CAAC,IAAI,CAAC,cAAc;YAAE,OAAM;QAChC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACd,QAAQ,CAAC,CAAC,IAAI,EAAE;YACd,KAAK,WAAW;gBACd,eAAe,GAAG,YAAY,GAAG,CAAC,CAAA;gBAClC,MAAK;YACP,KAAK,SAAS;gBACZ,eAAe,GAAG,YAAY,GAAG,CAAC,CAAA;gBAClC,MAAK;YACP,KAAK,OAAO,CAAC;YACb,KAAK,OAAO;gBACV,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;gBACrC,OAAM;YACR;gBACE,OAAM;SACT;QAED,IAAI,eAAe,GAAG,CAAC;YAAE,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAA;QAClE,IAAI,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM;YAAE,eAAe,GAAG,CAAC,CAAA;QAE/D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;IAClD,CAAC;IAED,WAAW,CAAE,CAAC,EAAE,SAAkB;QAChC,CAAC,CAAC,cAAc,EAAE,CAAA;QAElB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACd,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC,CAAA;QAErC,mEAAmE;QACnE,IAAI,CAAC,cAAc,GAAG,SAAS,CAAA;QAE/B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,CAAA;QACtE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;QAExE,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAA;SACxB;IACH,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;SAEvB;aAAM,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA;SAEhD;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SAE9E;IACH,CAAC;IAED;;;OAGG;IACH,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ;YAC1B,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YACxC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QAE9D,IAAI,CAAC,KAAK,GAAG,MAAM,CAAA;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAC/B,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,GAAG,KAAK,CAAA;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;IACzB,CAAC;IAID,MAAM;;QACJ,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAC,kBAAkB;YAC5B,YAAM,IAAI,EAAC,OAAO,IACf,IAAI,CAAC,KAAK,IAAI,CACb,aAAO,IAAI,EAAC,OAAO,EAAC,OAAO,EAAE,IAAI,CAAC,EAAE,IACjC,IAAI,CAAC,KAAK,CACL,CACT,CACI;YAEP,WAAK,IAAI,EAAC,eAAe,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAC,GAAG,EAC9C,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,EAC3C,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,EAC7C,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAC7B,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE;gBAE1C,WAAK,IAAI,EAAC,OAAO,EACZ,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,EACnC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,EACpC,KAAK,EAAE,EAAE,aAAa,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAC7C,MAAA,MAAA,IAAI,CAAC,UAAU,mCAAI,IAAI,CAAC,WAAW,mCAAI,MAAM,CAAO;gBAEtD,UAAI,IAAI,EAAC,UAAU,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAChD,MAAA,IAAI,CAAC,OAAO,0CAAE,GAAG,CAAC,MAAM,CAAC,EAAE;;oBAAC,OAAA,CAC3B,UAAI,IAAI,EAAC,eAAe,EACpB,GAAG,EAAE,MAAM,CAAC,KAAK,gBACL,MAAM,CAAC,KAAK,EACxB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAC1C,KAAK,EAAE;4BACL,UAAU,EAAE,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAA;4BACvE,OAAO,EAAE,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,KAAK,MAAK,MAAM,CAAC,KAAK;yBAClD,IAEF,MAAM,CAAC,KAAK,CACV,CACN,CAAA;iBAAA,CAAC,CACC,CACD;YAEN,YAAM,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,IAAI,WAAK,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,CAAO,CAAQ;YAEtF,YAAM,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,IAAI,WAAK,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,CAAO,CAAQ,CAC7E,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core'\nimport FormComponentInterface from '../../../interfaces/FormComponentInterface'\nimport { getComponentId } from '../../../utils/utils'\n\nexport interface SelectOption {\n  label: string\n  value: string\n}\n\n@Component({\n  tag: 'wab-select-input',\n  styleUrls: ['../../../commons/wab-input.css', 'select-input.css'],\n  shadow: true,\n})\nexport class SelectInput implements FormComponentInterface {\n  /**\n   * The input value\n   * if multiple is true, value is a string separated by commas\n   * @type {string}\n   */\n  @Prop({ mutable: true }) value: any\n  @Prop() placeholder: string\n  @Prop() disabled: boolean = false\n  @Prop() readonly: boolean = false\n  @Prop() name!: string\n  @Prop() label: string\n  @Prop() details: string\n  @Prop() errors: string\n  @Prop() options: { label: string, value: string }[]\n  @Prop() multiple: boolean = false\n  @Prop({ mutable: true }) initialValue\n  \n  @Event() valueChange: EventEmitter<string | string[]>\n  @Event() valueInput: EventEmitter<string | string[]>\n  \n  @State() selectedOptions: SelectOption[] = []\n  @State() inputValue: string\n  @State() hoverOption: SelectOption\n  @State() isDropdownOpen: boolean = false\n  @State() dropdownEl: HTMLElement\n  \n  get id () {\n    return getComponentId(this.name)\n  }\n  \n  componentWillLoad (): Promise<void> | void {\n    this.initialValue = this.initialValue ?? this.value\n    this.onValueChanged(this.value)\n  }\n  \n  componentDidLoad () {\n    this.dropdownEl.addEventListener('animationend', () => {\n      this.dropdownEl.classList.toggle('dropdown-close', false)\n    })\n  }\n  \n  /**\n   * When the value changes, update the selectedOptions and the input value\n   * @param newValue\n   */\n  @Watch('value')\n  onValueChanged (newValue: string | string[]) {\n    console.log('onValueChanged', newValue)\n    // Because the value can be a string separated by commas, we need to split it\n    if (this.multiple) {\n      this.selectedOptions = this.options.filter(option => {\n        if (newValue instanceof Array) {\n          return newValue.includes(option.value)\n        } else {\n          return newValue.split(',').includes(option.value)\n        }\n      })\n    } else {\n      this.selectedOptions = this.options.filter(option => option.value === newValue)\n    }\n    \n    this.updateInputValue()\n  }\n  \n  onOptionSelect (option: SelectOption) {\n    if (!option) return\n    \n    if (!this.multiple) {\n      this.selectedOptions = [option]\n      \n      this.closeDropdown()\n    } else {\n      const alreadySelected = this.selectedOptions?.find(o => o.value === option.value)\n      \n      if (alreadySelected) {\n        this.selectedOptions = this.selectedOptions.filter(o => o.value !== option.value)\n      } else {\n        this.selectedOptions = [...this.selectedOptions, option]\n      }\n    }\n    \n    this.updateInputValue()\n    this.emitValueChange()\n  }\n  \n  onKeyUp (e: KeyboardEvent) {\n    const lastSelectedOption = this.selectedOptions[this.selectedOptions.length - 1]\n    const currentIndex = this.options.findIndex(option => option.value === (this.hoverOption?.value ?? lastSelectedOption?.value))\n    let nextOptionIndex: number\n    \n    if (!this.isDropdownOpen) return\n    console.log(e)\n    switch (e.code) {\n      case 'ArrowDown':\n        nextOptionIndex = currentIndex + 1\n        break\n      case 'ArrowUp':\n        nextOptionIndex = currentIndex - 1\n        break\n      case 'Enter':\n      case 'Space':\n        this.onOptionSelect(this.hoverOption)\n        return\n      default:\n        return\n    }\n    \n    if (nextOptionIndex < 0) nextOptionIndex = this.options.length - 1\n    if (nextOptionIndex >= this.options.length) nextOptionIndex = 0\n    \n    this.hoverOption = this.options[nextOptionIndex]\n  }\n  \n  toggleFocus (e, isFocused: boolean) {\n    e.preventDefault()\n    \n    console.log(e)\n    console.log('toggleFocus', isFocused)\n    \n    // gestire animazione tramite js aspettando che questa sia completa\n    this.isDropdownOpen = isFocused\n    \n    this.dropdownEl.classList.toggle('dropdown-open', this.isDropdownOpen)\n    this.dropdownEl.classList.toggle('dropdown-close', !this.isDropdownOpen)\n    \n    if (this.isDropdownOpen) {\n      this.dropdownEl.focus()\n    }\n  }\n  \n  /**\n   * Update the internal input value based on the selected options\n   */\n  updateInputValue () {\n    if (this.selectedOptions.length === 0) {\n      this.inputValue = null\n      \n    } else if (this.selectedOptions.length === 1) {\n      this.inputValue = this.selectedOptions[0].label\n      \n    } else {\n      this.inputValue = this.selectedOptions.map(option => option.label).join(', ')\n      \n    }\n  }\n  \n  /**\n   * Emit the valueChange event\n   * and update the \"value\" property\n   */\n  emitValueChange () {\n    const toEmit = this.multiple\n      ? this.selectedOptions.map(o => o.value)\n      : this.selectedOptions.map(option => option.value).join(',')\n    \n    this.value = toEmit\n    this.valueInput.emit(toEmit)\n    this.valueChange.emit(toEmit)\n  }\n  \n  closeDropdown () {\n    this.isDropdownOpen = false\n    this.hoverOption = null\n  }\n  \n  \n  \n  render() {\n    return (\n      <Host class=\"wab-form-control\">\n        <slot name=\"label\">\n          {this.label && (\n            <label part=\"label\" htmlFor={this.id}>\n              {this.label}\n            </label>\n          )}\n        </slot>\n        \n        <div part=\"input-wrapper\" id={this.id} tabindex=\"0\"\n             onFocusin={(e) => this.toggleFocus(e, true)}\n             onFocusout={(e) => this.toggleFocus(e, false)}\n             onKeyUp={e => this.onKeyUp(e)}\n             class={{ 'focus': this.isDropdownOpen }}\n        >\n          <div part=\"input\"\n               onFocusin={e => e.stopPropagation()}\n               onFocusout={e => e.stopPropagation()}\n               class={{ 'placeholder': !this.inputValue }}\n          >{this.inputValue ?? this.placeholder ?? '\\xa0'}</div>\n          \n          <ul part=\"dropdown\" ref={(e) => this.dropdownEl = e}>\n            {this.options?.map(option => (\n              <li part=\"dropdown-item\"\n                  key={option.value}\n                  data-value={option.value}\n                  onClick={() => this.onOptionSelect(option)}\n                  class={{\n                    'selected': !!this.selectedOptions?.find(o => o.value === option.value),\n                    'hover': this.hoverOption?.value === option.value\n                  }}\n              >\n                {option.label}\n              </li>\n            ))}\n          </ul>\n        </div>\n        \n        <slot name=\"details\">{this.details && <div part=\"details\">{this.details}</div>}</slot>\n        \n        <slot name=\"errors\">{this.errors && <div part=\"errors\">{this.errors}</div>}</slot>\n      </Host>\n    );\n  }\n\n}\n"]}