{"version":3,"file":"checkbox-input.js","sourceRoot":"","sources":["../../../../src/components/form-controls/checkbox-input/checkbox-input.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAgB,SAAS,EAAE,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAQtD,MAAM,OAAO,aAAa;;uBACoB,KAAK;;wBAErB,KAAK;wBACL,KAAK;;;;;;IASjC,IAAI,EAAE;QACJ,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,mBAAmB,CAAE,CAAqB,EAAE,WAAoB;QAC9D,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAEnC,IAAI,WAAW,KAAK,QAAQ,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,iBAAiB;QACf,8BAA8B;IAChC,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAC,2BAA2B;YACrC,YAAM,IAAI,EAAC,OAAO,IACf,IAAI,CAAC,KAAK,IAAI,CACb,aAAO,IAAI,EAAC,OAAO,EAAC,OAAO,EAAE,IAAI,CAAC,EAAE,IACjC,IAAI,CAAC,KAAK,CACL,CACT,CACI;YAEP,aAAO,IAAI,EAAC,OAAO,EACZ,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EACzC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,QAAQ,CAAC,GACzD;YAEF,YAAM,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,IAAI,WAAK,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,CAAO,CAAQ;YAEtF,YAAM,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,IAAI,WAAK,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,CAAO,CAAQ,CAC7E,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Host, h, Prop, Event, EventEmitter, Component } from '@stencil/core';\nimport { getComponentId } from '../../../utils/utils';\nimport FormComponentInterface from '../../../interfaces/FormComponentInterface';\n\n@Component({\n  tag: 'wab-checkbox-input',\n  styleUrl: 'checkbox-input.css',\n  shadow: true,\n})\nexport class CheckboxInput implements FormComponentInterface {\n  @Prop({ mutable: true }) checked: boolean = false;\n  @Prop() value: string;\n  @Prop() disabled: boolean = false;\n  @Prop() readonly: boolean = false;\n  @Prop() name!: string;\n  @Prop() label: string;\n  @Prop() details: string;\n  @Prop() errors: string;\n  \n  @Event() valueChange: EventEmitter<string>;\n  @Event() valueInput: EventEmitter<string>;\n  \n  get id () {\n    return getComponentId(this.name);\n  }\n  \n  valueChangedHandler (e: InputEvent | Event, eventToEmit?: string) {\n    this.checked = e.target['checked'];\n    \n    if (eventToEmit === 'change') {\n      this.valueChange.emit(e.target['checked']);\n    } else {\n      this.valueInput.emit(e.target['checked']);\n    }\n  }\n  \n  componentWillLoad () {\n    // console.log(this.disabled);\n  }\n  \n  render () {\n    return (\n      <Host class='wab-form-checkbox-wrapper'>\n        <slot name='label'>\n          {this.label && (\n            <label part='label' htmlFor={this.id}>\n              {this.label}\n            </label>\n          )}\n        </slot>\n        {/* poters cegliere se si vuole usare la checkbox html o una custom, nascondendo quella reale */}\n        <input part='input'\n               type='checkbox'\n               checked={this.checked}\n               id={this.id}\n               disabled={this.disabled}\n               value={this.value}\n               onInput={e => this.valueChangedHandler(e)}\n               onChange={e => this.valueChangedHandler(e, 'change')}\n        />\n        \n        <slot name='details'>{this.details && <div part='details'>{this.details}</div>}</slot>\n        \n        <slot name='errors'>{this.errors && <div part='errors'>{this.errors}</div>}</slot>\n      </Host>\n    );\n  }\n  \n}\n"]}