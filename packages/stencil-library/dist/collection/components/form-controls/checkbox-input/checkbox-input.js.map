{"version":3,"file":"checkbox-input.js","sourceRoot":"","sources":["../../../../src/components/form-controls/checkbox-input/checkbox-input.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAgB,SAAS,EAAE,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAQtD,MAAM,OAAO,aAAa;;uBACoB,KAAK;;wBAErB,KAAK;wBACL,KAAK;;;6BAGS,OAAO;;;yBAOpB,KAAK;;IAKlC,IAAI,EAAE;QACJ,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,mBAAmB,CAAE,CAAqB,EAAE,WAAoB;QAC9D,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAEnC,IAAI,WAAW,KAAK,QAAQ,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,iBAAiB;QACf,8BAA8B;IAChC,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAC,kBAAkB;YAC5B,aAAO,IAAI,EAAC,OAAO;gBAChB,IAAI,CAAC,aAAa,KAAK,MAAM,IAAI,YAAM,IAAI,EAAC,WAAW,IAAE,IAAI,CAAC,KAAK,CAAQ;gBAE5E,aAAO,IAAI,EAAC,OAAO,EACZ,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,EAAE,EAC5D,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EACzC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,QAAQ,CAAC,GACzD;gBAED,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAM,IAAI,EAAC,aAAa;oBAAC,YAAM,IAAI,EAAC,sBAAsB,GAAQ,CAAO,CAAC;gBAEnG,IAAI,CAAC,aAAa,KAAK,OAAO,IAAI,YAAM,IAAI,EAAC,WAAW,IAAE,IAAI,CAAC,KAAK,CAAQ,CACvE;YAER,YAAM,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,IAAI,WAAK,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,CAAO,CAAQ;YAEtF,YAAM,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,IAAI,WAAK,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,CAAO,CAAQ,CAC7E,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Host, h, Prop, Event, EventEmitter, Component } from '@stencil/core';\nimport { getComponentId } from '../../../utils/utils';\nimport FormComponentInterface from '../../../interfaces/FormComponentInterface';\n\n@Component({\n  tag: 'wab-checkbox-input',\n  styleUrls: ['../../../commons/wab-input.css', 'checkbox-input.css'],\n  shadow: true,\n})\nexport class CheckboxInput implements FormComponentInterface {\n  @Prop({ mutable: true }) checked: boolean = false;\n  @Prop() value: string;\n  @Prop() disabled: boolean = false;\n  @Prop() readonly: boolean = false;\n  @Prop() name!: string;\n  @Prop() label: string;\n  @Prop() labelPosition: 'left' | 'right' = 'right'\n  @Prop() details: string;\n  @Prop() errors: string;\n  \n  /**\n   * Use the native checkbox html element instead of the custom css one\n   */\n  @Prop() useNative: boolean = false\n  \n  @Event() valueChange: EventEmitter<string>;\n  @Event() valueInput: EventEmitter<string>;\n  \n  get id () {\n    return getComponentId(this.name);\n  }\n  \n  valueChangedHandler (e: InputEvent | Event, eventToEmit?: string) {\n    this.checked = e.target['checked'];\n    \n    if (eventToEmit === 'change') {\n      this.valueChange.emit(e.target['checked']);\n    } else {\n      this.valueInput.emit(e.target['checked']);\n    }\n  }\n  \n  componentWillLoad () {\n    // console.log(this.disabled);\n  }\n  \n  render () {\n    return (\n      <Host class=\"wab-form-control\">\n        <label part=\"label\" >\n          {this.labelPosition === 'left' && <span part='labelText'>{this.label}</span>}\n          \n          <input part=\"input\"\n                 type=\"checkbox\"\n                 checked={this.checked}\n                 id={this.id}\n                 disabled={this.disabled}\n                 value={this.value}\n                 style={{ display: this.useNative ? 'inline-block' : 'none' }}\n                 onInput={e => this.valueChangedHandler(e)}\n                 onChange={e => this.valueChangedHandler(e, 'change')}\n          />\n          \n          {this.useNative ? null : (<span part=\"customInput\"><span part=\"customInputCheckmark\"></span></span>)}\n          \n          {this.labelPosition === 'right' && <span part='labelText'>{this.label}</span>}\n        </label>\n        \n        <slot name='details'>{this.details && <div part='details'>{this.details}</div>}</slot>\n        \n        <slot name='errors'>{this.errors && <div part='errors'>{this.errors}</div>}</slot>\n      </Host>\n    );\n  }\n  \n}\n"]}