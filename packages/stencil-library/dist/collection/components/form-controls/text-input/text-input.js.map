{"version":3,"file":"text-input.js","sourceRoot":"","sources":["../../../../src/components/form-controls/text-input/text-input.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAQtD,MAAM,OAAO,SAAS;;;;oBAGG,MAAM;wBACD,KAAK;wBACL,KAAK;;;;;;IASjC,IAAI,EAAE;QACJ,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,mBAAmB,CAAE,CAAqB,EAAE,WAAoB;QAC9D,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAE/B,IAAI,WAAW,KAAK,QAAQ,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SACzC;IACH,CAAC;IACD,iBAAiB;QACf,8BAA8B;IAChC,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAC,kBAAkB;YAC5B,YAAM,IAAI,EAAC,OAAO,IACf,IAAI,CAAC,KAAK,IAAI,CACb,aAAO,IAAI,EAAC,OAAO,EAAC,OAAO,EAAE,IAAI,CAAC,EAAE,IACjC,IAAI,CAAC,KAAK,CACL,CACT,CACI;YAEP,aAAO,IAAI,EAAC,OAAO,EACZ,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EACzC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAI;YAE/D,YAAM,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,IAAI,WAAK,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,CAAO,CAAQ;YAEtF,YAAM,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,IAAI,WAAK,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,CAAO,CAAQ,CAC7E,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\nimport { getComponentId } from '../../../utils/utils';\nimport FormComponentInterface from '../../../interfaces/FormComponentInterface';\n\n@Component({\n  tag: 'wab-text-input',\n  styleUrls: ['text-input.css', '../../../commons/wab-input.css'],\n  shadow: true,\n})\nexport class TextInput implements FormComponentInterface {\n  @Prop({ mutable: true }) value: string;\n  @Prop() placeholder: string;\n  @Prop() type: string = 'text';\n  @Prop() disabled: boolean = false;\n  @Prop() readonly: boolean = false;\n  @Prop() name!: string;\n  @Prop() label: string;\n  @Prop() details: string;\n  @Prop() errors: string;\n  \n  @Event() valueChange: EventEmitter<string>;\n  @Event() valueInput: EventEmitter<string>;\n\n  get id() {\n    return getComponentId(this.name);\n  }\n  \n  valueChangedHandler (e: InputEvent | Event, eventToEmit?: string) {\n    this.value = e.target['value'];\n    \n    if (eventToEmit === 'change') {\n      this.valueChange.emit(e.target['value']);\n    } else {\n      this.valueInput.emit(e.target['value']);\n    }\n  }\n  componentWillLoad() {\n    // console.log(this.disabled);\n  }\n\n  render() {\n    return (\n      <Host class=\"wab-form-control\">\n        <slot name=\"label\">\n          {this.label && (\n            <label part=\"label\" htmlFor={this.id}>\n              {this.label}\n            </label>\n          )}\n        </slot>\n        \n        <input part='input'\n               type={this.type}\n               placeholder={this.placeholder}\n               value={this.value}\n               id={this.id}\n               disabled={this.disabled}\n               readonly={this.readonly}\n               onInput={e => this.valueChangedHandler(e)}\n               onChange={e => this.valueChangedHandler(e, 'change')} />\n\n        <slot name=\"details\">{this.details && <div part=\"details\">{this.details}</div>}</slot>\n\n        <slot name=\"errors\">{this.errors && <div part=\"errors\">{this.errors}</div>}</slot>\n      </Host>\n    );\n  }\n  \n}\n"]}